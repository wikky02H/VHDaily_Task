//task=>3
question?  difference between web.php & app.php in routes folder?
answer:

 web.php(Web routes are those that will be visited by your end users):

        -> This file is used to define routes that are related to web-based user interfaces.
           It typically contains routes for pages, forms, and other user interactions.

 api.php(API routes are those for your API, if you have one):

        ->This file is used to define routes that are related to APIs.
          It typically contains routes for RESTful APIs, which respond with JSON data rather than HTML.

//task=>4
question?  What is MVC design pattern?
answer:

   MVC = Model,View,Controller

     ->MVC is a software design pattern that is widely used in developing web applications.
       This pattern separates the application into three interconnected components MVC.

  (MVC) pattern is implemented by creating separate directories for each component.
         For example,
             M(models)->stored->"app/Models" directory,
             V(View)->stored->"resources/views" directory,
             C(Controller)->stored->"app/Http/Controllers" directory,

  Model:
     ->This component represents the data and the business logic of the application.
       It is responsible for interacting with the database or other data sources,
       managing the application data, and performing data validation.

  View :
     ->This component represents the presentation layer of the application.
       It is responsible for rendering the user interface based on the data provided by the Controller.
       The View is usually implemented as HTML, CSS, and JavaScript code.

  Controller:
     ->This component manages the flow of data between the Model and the View.
       It receives the user input, interacts with the Model to retrieve or modify data,
       and passes the data to the View for rendering.

       In a typical MVC architecture, the Controller receives the user's request and
       determines which Model components should be invoked to handle the request.
       Once the data is processed, the Controller selects the appropriate View to display the results

       By separating the application into these three components, the MVC pattern allows for greater flexibility
       and maintainability.
       It makes it easier to make changes to one component without affecting the others,
       and it promotes code reusability and modularization.




